<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="10" passed="4" failed="6" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-08-16T11:28:19 IST" name="Suite" finished-at="2021-08-16T11:30:10 IST" duration-ms="111019">
    <groups>
    </groups>
    <test started-at="2021-08-16T11:28:19 IST" name="Test" finished-at="2021-08-16T11:29:12 IST" duration-ms="52854">
      <class name="com.sg.test.LoginTest">
        <test-method is-config="true" signature="setup(java.lang.String)[pri:0, instance:com.sg.test.LoginTest@5ba3f27a]" started-at="2021-08-16T11:28:20 IST" name="setup" finished-at="2021-08-16T11:28:31 IST" duration-ms="11475" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ff]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="InvalidCredentailsTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.sg.test.LoginTest@5ba3f27a]" started-at="2021-08-16T11:28:31 IST" name="InvalidCredentailsTest" data-provider="commonDataProvider" finished-at="2021-08-16T11:28:32 IST" duration-ms="1448" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pass]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[English (Indian)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Invalid username or password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InvalidCredentailsTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.sg.test.LoginTest@5ba3f27a]" started-at="2021-08-16T11:28:32 IST" name="tearDown" finished-at="2021-08-16T11:28:33 IST" duration-ms="571" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.String)[pri:0, instance:com.sg.test.LoginTest@5ba3f27a]" started-at="2021-08-16T11:28:33 IST" name="setup" finished-at="2021-08-16T11:28:39 IST" duration-ms="5911" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ff]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="InvalidCredentailsTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.sg.test.LoginTest@5ba3f27a]" started-at="2021-08-16T11:28:39 IST" name="InvalidCredentailsTest" data-provider="commonDataProvider" finished-at="2021-08-16T11:28:40 IST" duration-ms="1362" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pass]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[English (Indian)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Invalid username or password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InvalidCredentailsTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.sg.test.LoginTest@5ba3f27a]" started-at="2021-08-16T11:28:40 IST" name="tearDown" finished-at="2021-08-16T11:28:41 IST" duration-ms="559" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.String)[pri:0, instance:com.sg.test.LoginTest@5ba3f27a]" started-at="2021-08-16T11:28:41 IST" name="setup" finished-at="2021-08-16T11:28:47 IST" duration-ms="6370" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ff]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="validCredentailsTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.sg.test.LoginTest@5ba3f27a]" started-at="2021-08-16T11:28:47 IST" name="validCredentailsTest" data-provider="validCredentailsData" finished-at="2021-08-16T11:28:51 IST" duration-ms="3399" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pass]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[English (Indian)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[OpenEMR]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [OpenEMR] but found [CloudEMR]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [OpenEMR] but found [CloudEMR]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.sg.test.LoginTest.validCredentailsTest(LoginTest.java:33)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validCredentailsTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.sg.test.LoginTest@5ba3f27a]" started-at="2021-08-16T11:28:51 IST" name="tearDown" finished-at="2021-08-16T11:28:51 IST" duration-ms="733" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.String)[pri:0, instance:com.sg.test.LoginTest@5ba3f27a]" started-at="2021-08-16T11:28:51 IST" name="setup" finished-at="2021-08-16T11:28:58 IST" duration-ms="6320" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ff]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="validCredentailsTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.sg.test.LoginTest@5ba3f27a]" started-at="2021-08-16T11:28:58 IST" name="validCredentailsTest" data-provider="validCredentailsData" finished-at="2021-08-16T11:29:01 IST" duration-ms="3290" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[physician]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[physician]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[English (Indian)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[OpenEMR]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [OpenEMR] but found [CloudEMR]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [OpenEMR] but found [CloudEMR]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.sg.test.LoginTest.validCredentailsTest(LoginTest.java:33)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validCredentailsTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.sg.test.LoginTest@5ba3f27a]" started-at="2021-08-16T11:29:01 IST" name="tearDown" finished-at="2021-08-16T11:29:02 IST" duration-ms="560" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.String)[pri:0, instance:com.sg.test.LoginTest@5ba3f27a]" started-at="2021-08-16T11:29:02 IST" name="setup" finished-at="2021-08-16T11:29:08 IST" duration-ms="6334" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ff]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="validCredentailsTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.sg.test.LoginTest@5ba3f27a]" started-at="2021-08-16T11:29:08 IST" name="validCredentailsTest" data-provider="validCredentailsData" finished-at="2021-08-16T11:29:11 IST" duration-ms="3542" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[accountant]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[accountant]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[English (Indian)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[OpenEMR]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [OpenEMR] but found [CloudEMR]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [OpenEMR] but found [CloudEMR]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.sg.test.LoginTest.validCredentailsTest(LoginTest.java:33)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validCredentailsTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.sg.test.LoginTest@5ba3f27a]" started-at="2021-08-16T11:29:11 IST" name="tearDown" finished-at="2021-08-16T11:29:12 IST" duration-ms="562" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.sg.test.LoginTest -->
    </test> <!-- Test -->
    <test started-at="2021-08-16T11:29:12 IST" name="Test2" finished-at="2021-08-16T11:30:10 IST" duration-ms="58135">
      <class name="com.sg.test.LoginTest">
        <test-method is-config="true" signature="setup(java.lang.String)[pri:0, instance:com.sg.test.LoginTest@791f145a]" started-at="2021-08-16T11:29:12 IST" name="setup" finished-at="2021-08-16T11:29:19 IST" duration-ms="6661" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ff]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="InvalidCredentailsTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.sg.test.LoginTest@791f145a]" started-at="2021-08-16T11:29:19 IST" name="InvalidCredentailsTest" data-provider="commonDataProvider" finished-at="2021-08-16T11:29:20 IST" duration-ms="1353" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pass]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[English (Indian)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Invalid username or password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InvalidCredentailsTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.sg.test.LoginTest@791f145a]" started-at="2021-08-16T11:29:20 IST" name="tearDown" finished-at="2021-08-16T11:29:21 IST" duration-ms="563" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.String)[pri:0, instance:com.sg.test.LoginTest@791f145a]" started-at="2021-08-16T11:29:21 IST" name="setup" finished-at="2021-08-16T11:29:27 IST" duration-ms="6367" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ff]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="InvalidCredentailsTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.sg.test.LoginTest@791f145a]" started-at="2021-08-16T11:29:27 IST" name="InvalidCredentailsTest" data-provider="commonDataProvider" finished-at="2021-08-16T11:29:28 IST" duration-ms="1376" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pass]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[English (Indian)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Invalid username or password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InvalidCredentailsTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.sg.test.LoginTest@791f145a]" started-at="2021-08-16T11:29:28 IST" name="tearDown" finished-at="2021-08-16T11:29:29 IST" duration-ms="569" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.String)[pri:0, instance:com.sg.test.LoginTest@791f145a]" started-at="2021-08-16T11:29:29 IST" name="setup" finished-at="2021-08-16T11:29:36 IST" duration-ms="7374" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ff]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="validCredentailsTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.sg.test.LoginTest@791f145a]" started-at="2021-08-16T11:29:36 IST" name="validCredentailsTest" data-provider="validCredentailsData" finished-at="2021-08-16T11:29:40 IST" duration-ms="3675" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pass]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[English (Indian)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[OpenEMR]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [OpenEMR] but found [CloudEMR]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [OpenEMR] but found [CloudEMR]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.sg.test.LoginTest.validCredentailsTest(LoginTest.java:33)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validCredentailsTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.sg.test.LoginTest@791f145a]" started-at="2021-08-16T11:29:40 IST" name="tearDown" finished-at="2021-08-16T11:29:41 IST" duration-ms="535" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.String)[pri:0, instance:com.sg.test.LoginTest@791f145a]" started-at="2021-08-16T11:29:41 IST" name="setup" finished-at="2021-08-16T11:29:47 IST" duration-ms="6331" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ff]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="validCredentailsTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.sg.test.LoginTest@791f145a]" started-at="2021-08-16T11:29:47 IST" name="validCredentailsTest" data-provider="validCredentailsData" finished-at="2021-08-16T11:29:50 IST" duration-ms="3168" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[physician]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[physician]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[English (Indian)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[OpenEMR]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [OpenEMR] but found [CloudEMR]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [OpenEMR] but found [CloudEMR]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.sg.test.LoginTest.validCredentailsTest(LoginTest.java:33)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validCredentailsTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.sg.test.LoginTest@791f145a]" started-at="2021-08-16T11:29:50 IST" name="tearDown" finished-at="2021-08-16T11:29:51 IST" duration-ms="653" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.String)[pri:0, instance:com.sg.test.LoginTest@791f145a]" started-at="2021-08-16T11:29:51 IST" name="setup" finished-at="2021-08-16T11:30:06 IST" duration-ms="15384" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ff]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="validCredentailsTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.sg.test.LoginTest@791f145a]" started-at="2021-08-16T11:30:06 IST" name="validCredentailsTest" data-provider="validCredentailsData" finished-at="2021-08-16T11:30:09 IST" duration-ms="3433" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[accountant]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[accountant]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[English (Indian)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[OpenEMR]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [OpenEMR] but found [CloudEMR]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [OpenEMR] but found [CloudEMR]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.sg.test.LoginTest.validCredentailsTest(LoginTest.java:33)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validCredentailsTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.sg.test.LoginTest@791f145a]" started-at="2021-08-16T11:30:09 IST" name="tearDown" finished-at="2021-08-16T11:30:10 IST" duration-ms="665" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.sg.test.LoginTest -->
    </test> <!-- Test2 -->
  </suite> <!-- Suite -->
</testng-results>
